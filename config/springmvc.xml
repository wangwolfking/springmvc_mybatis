<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	<!-- 配置handler -->
	<bean id="ItemsController1" name="/queryItems.action" class="com.yocaly.ssm.contrller.ItemsController1" />
	<!-- 处理器适配器 -->
	<!-- 所有的处理器适配器都要实现 HandlerAdapter接口 -->
	<bean
		class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />
	<!-- 处理器映射器 将bean的name作为url进行查找，需要在配置handler时指定beanname（url） 所有的映射器都实现了handlermapping接口-->
	<bean
		class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" /> 

	<!-- 另一个非注解适配器  -->
	<bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter" />


	<!-- 配置另外一个Handler -->
	<bean id="ItemsController2" class="com.yocaly.ssm.contrller.ItemsController2" />
	<!-- 注解的handler 需要单独配置 实际开发中建议使用组件扫描 -->
	<!-- <bean id="ItemsController3" class="com.yocaly.ssm.contrller.ItemsController3" 
		/> -->
	<!-- 可以扫描controller，service，..... -->
	<context:component-scan base-package="com.yocaly.ssm.contrller"></context:component-scan>
	<!-- 简单Url映射 --> <!-- 所有的处理器适配器都要实现 HandlerAdapter接口 -->
	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="mappings">
			<props>
				<prop key="/queryItems1.action">ItemsController1</prop>
				<prop key="/queryItems2.action">ItemsController1</prop>
				<prop key="/queryItems3.action">ItemsController2</prop>
			</props>
		</property>
	</bean>

	<!-- 注解的处理器映射器  
	<bean
		class="org.springframework.web.servlet.mvc.mehtod.annotation.RequestMappingHandlerMapping" /> -->
	<!-- 注解的处理器适配器
	<bean
		class="org.springframework.web.servlet.mvc.mehtod.annotation.RequestMappingHandlerAdapter" />   -->
	<!-- 使用mvc：annotation-driven代替上边注解映射器和注解适配器配置 mvc:annotation-driven默认加载很多的参数绑定方法， 
		比如json转换解析器就是默认加载了，如果使用mvc：annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter 
		实际开发中使用mvc：annotation-driven  -->
		<mvc:annotation-driven></mvc:annotation-driven>


	<!-- 处理器映射器 -->

	<!-- 视图解析器 -->
	<!-- 1、配置映射器与适配器 <mvc:annotation-driven></mvc:annotation-driven> -->
	<!-- 2、视图解析器 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<span style="white-space:pre"> </span> <property name="prefix" value="/" 
		/> <property name="suffix" value=".jsp" /> </bean> -->
	<!-- 3、自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器&nbsp; <context:component-scan 
		base-package="com.rhzh.controller" /> -->
	<!-- 视图解析器 解析jsp视图，默认使用jstl标签，注意classpath下要有jstl的包 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver" />
</beans>